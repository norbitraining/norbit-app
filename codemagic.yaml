workflows:
  android-prod:
    name: Android Release
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      android_signing:
        - norbit-prod
      groups:
        - global
        - android
      vars:
        PACKAGE_NAME: "com.norbitapp"
      node: 18.17.0
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: "master"
    scripts:
      - name: Install dependencies
        script: |
          yarn install

      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"

      - name: Type-check app code
        script: "yarn run lint"

      - name: Update version
        script: |
          LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --credentials "$SERVICE_ACCOUNT_JSON_KEY")
          if [ -z $LATEST_GOOGLE_PLAY_BUILD_NUMBER ]
            then
              # fallback in case no build number was found from google play. Alternatively, you can `exit 1` to fail the build
              UPDATED_BUILD_NUMBER=$BUILD_NUMBER
            else
              UPDATED_BUILD_NUMBER=$(($LATEST_GOOGLE_PLAY_BUILD_NUMBER + 1))
          fi

          sed -i "" "s/versionCode [0-9]*/versionCode $UPDATED_BUILD_NUMBER/" android/app/build.gradle
          sed -i '' "s/versionName \".*\"/versionName \"1.3.$UPDATED_BUILD_NUMBER\"/" android/app/build.gradle

      - name: Build Android release
        script: |
          cd android
          ./gradlew bundleRelease

    artifacts:
      - android/app/build/outputs/**/*.aab

    publishing:
      google_play:
        # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
        credentials: $SERVICE_ACCOUNT_JSON_KEY
        track: internal
        changes_not_sent_for_review: false
      email:
        recipients:
          - egarcia@norbitraining.com
        notify:
          success: true
          failure: false

  ios-prod:
    name: iOS Release
    instance_type: mac_mini_m1
    max_build_duration: 120
    integrations:
      app_store_connect: codemagic
    environment:
      ios_signing:
        distribution_type: app_store
        provisioning_profiles:
          - Provisioning_norbit
        certificates:
          - Distribution_norbit
      groups:
        - global
        - ios
      vars:
        # Env vars for automatic iOS code signing
        # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
        XCODE_WORKSPACE: "norbitApp.xcworkspace" # <-- Put the name of your Xcode workspace here
        # There's supposedly no scheme name so what gives?
        XCODE_SCHEME: "norbitApp" # <-- Put the name of your Xcode scheme here
        BUNDLE_IOS_ID: "norbitApp" # <-- Put your Bundle Id here e.g com.domain.myapp
        APP_STORE_APP_ID: 6448375865 # <-- Put the app id number here. This is found in App Store Connect > App > General > App Information
      node: 18.17.0
      xcode: 15.4
      cocoapods: 1.14.3
    triggering:
      events:
        - tag
      branch_patterns:
        - pattern: "master"
    scripts:
      - name: Install dependencies
        script: |
          yarn install
      - name: Type-check app code
        script: |
          yarn run lint
      - name: Install CocoaPods dependencies
        script: |
          npx pod-install
      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize
      - name: Use system default keychain
        script: |
          keychain add-certificates
      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles --warn-only
      - name: Increment build number
        script: |
          #!/bin/sh
          set -e
          set -x
          cd $FCI_BUILD_DIR/ios

          NEW_VERSION="1.3.5"

          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $NEW_VERSION" "$FCI_BUILD_DIR/ios/$XCODE_SCHEME/Info.plist"

          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID")
          agvtool new-version -all $(($LATEST_BUILD_NUMBER + 1))
      - name: Build ipa for distribution
        script: |
          xcode-project build-ipa \
          --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" \
          --scheme "$XCODE_SCHEME"
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        # Configuration related to App Store (optional)
        # Note: This action is performed during post-processing.
        submit_to_app_store: false
      email:
        recipients:
          - egarcia@norbitraining.com
        notify:
          success: true
          failure: false
